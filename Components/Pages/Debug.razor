@page "/debug"
@using Mantis.Domain.Voip
@using Microsoft.AspNetCore.SignalR.Client
@inject HubConnection HubConnection
@inject RingCentralService RingCentralService
@rendermode InteractiveServer

<h3>RingCentral API Debug</h3>

<button @onclick="CreateSubscription">Create Subscription</button>

@if (!string.IsNullOrEmpty(debugInfo))
{
    <div>
        <h4>Debug Information:</h4>
        <pre>@debugInfo</pre>
    </div>
}

@if (incomingCall != null)
{
    <p><strong>Incoming Call from:</strong> @incomingCall</p>
}

@code {
    private string incomingCall;
    private string debugInfo;

    protected override async Task OnInitializedAsync()
    {
        RingCentralService.OnDebugMessage += (message) =>
        {
            debugInfo += message + "\n";
            StateHasChanged();
        };

        HubConnection.On<string>("ReceiveCallAlert", (callerId) =>
        {
            incomingCall = callerId;
            StateHasChanged();
        });

        await HubConnection.StartAsync();
    }

    private async Task CreateSubscription()
    {
        try
        {
            var webhookUrl = "https://yourdomain.com/ringcentral/webhook";
            await RingCentralService.CreateSubscriptionAsync(webhookUrl);
            debugInfo += "Subscription created successfully.\n";
        }
        catch (Exception ex)
        {
            debugInfo += $"Error creating subscription: {ex.Message}\n";
        }
    }
}
