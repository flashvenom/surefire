@page "/Forms/Certificate/{CertificateId:int}"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.SfPdfViewer
@inject NavigationManager NavigationManager
@inject IWebHostEnvironment Environment
@inject IHttpClientFactory _http

@rendermode InteractiveServer

<_toolbar OnDownloadJSON="HandleDownloadJSON" OnUploadJSON="HandleUploadJSON" OnLoadEverything="HandleLoadEverything" />

<div class="control-section">
    <SfPdfViewer2 @ref=pdfViewer DocumentPath="@DocumentPath" Height="640px" Width="100%"></SfPdfViewer2>
</div>

@code {
    [Parameter]
    public int CertificateId { get; set; }

    private string DocumentPath { get; set; } = "";
    private string JsonPath { get; set; } = "";
    private SfPdfViewer2 pdfViewer;
    private Stream stream;

    protected override void OnInitialized()
    {
        DocumentPath = "wwwroot/forms/a025-2016-03.pdf";
        JsonPath = Path.Combine(Environment.WebRootPath, "forms", "a025-2016-03.json");
    }

        public async void HandleDownloadJSON()
    {
        stream = await pdfViewer.ExportFormFieldsAsync(FormFieldDataFormat.Json);

        using (var fileStream = new FileStream(JsonPath, FileMode.Create, FileAccess.Write))
        {
            await stream.CopyToAsync(fileStream);
        }
    }

    public async void HandleUploadJSON()
    {
        using (var fileStream = new FileStream(JsonPath, FileMode.Open, FileAccess.Read))
        {
            stream = new MemoryStream();
            await fileStream.CopyToAsync(stream);
            stream.Position = 0;

            await pdfViewer.ImportFormFieldsAsync(stream, FormFieldDataFormat.Json);
        }
    }


    public async void HandleLoadEverything()
    {
        var httpClient = _http.CreateClient("CertificateApi");

        var jsonResponse = await httpClient.GetStringAsync($"/api/Certificate/Load/{CertificateId}");

        // Convert the JSON response to a stream
        var jsonBytes = System.Text.Encoding.UTF8.GetBytes(jsonResponse);
        stream = new MemoryStream(jsonBytes);

        await pdfViewer.ImportFormFieldsAsync(stream, FormFieldDataFormat.Json);
    }

}
