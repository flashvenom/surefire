@page "/"
@page "/Home"
@using Mantis.Components.Shared.Home
@using Mantis.Domain.Policies.Models
@using Mantis.Domain.Renewals.ViewModels
@using Mantis.Domain.Renewals.Services
@using Mantis.Domain.Policies.Services
@using Mantis.Domain.Shared
@using Syncfusion.Blazor.Spinner
@using Syncfusion.Blazor.Notifications
@using Microsoft.AspNetCore.Components.Web
@inject TaskService TaskService
@inject PolicyService PolicyService
@inject StateService StateService
@inject HomeService HomeService
@inherits AppComponentBase

<PageTitle>Surefire: Open Source Agency</PageTitle>

<img src="/img/banner-homepage.png" class="img-fluid" />

<div class="page-content">
    <img src="/img/bottom-right.png" class="bottom-right" />
    <div class="flex-container">
        <div class="left-column">
            <div class="left-column__pad">
                <RenewalTasks tabTitle="Renewal Task Items" tasks="@tasks" isLoading="isLoading" />
                <div style="height:25px;"></div>
                <RenewalTasks tabTitle="My Sub Task Items" tasks="@subtasks" bgColor="darkpurple" isLoading="isLoading" />
            </div>
        </div>
        <div class="right-column">
            <div class="right-column__pad">
                <div class="nested-flex-container">

                    <div class="nested-left-column">
                        <div class="nested-left-column__pad">
                            <DailyTaskList IncompleteTasks="@dailyTasks" CompletedTasks="@dailyTasksCompleted" isLoading="isLoading" />
                        </div>
                    </div>

                    <div class="nested-right-column">
                        <div class="nested-right-column__pad">
                            <IncompleteTasks IncompleteTasks="@incompleteTasks" isLoading="isLoading" />
                            <ExpiringSoon upcomingRenewals="@upcomingRenewals" isLoading="isLoading" />
                            <CheatSheet />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    

</style>

@code {
    private List<HomePageTasksViewModel> tasks;
    private List<HomePageTasksViewModel> subtasks;
    private List<HomePageTasksViewModel> incompleteTasks;
    private List<DailyTask> dailyTasks;
    private List<DailyTask> dailyTasksCompleted;
    private List<Policy> upcomingRenewals;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var tasksTask = HomeService.GetHomePageTasksAsync();
        var subtasksTask = HomeService.GetHomePageSubTasksAsync();
        var dailyTasksTask = HomeService.GetDailyTasksAsync();
        var dailyTasksCompletedTask = HomeService.GetDailyCompletedTasksAsync();
        var incompleteTasksTask = HomeService.GetIncompleteTasksForCurrentUserAsync();
        var upcomingRenewalsTask = HomeService.GetUpcomingRenewalsAsync();

        await Task.WhenAll(tasksTask, subtasksTask, dailyTasksTask, dailyTasksCompletedTask, incompleteTasksTask, upcomingRenewalsTask);

        tasks = await tasksTask;
        subtasks = await subtasksTask;
        dailyTasks = await dailyTasksTask;
        dailyTasksCompleted = await dailyTasksCompletedTask;
        incompleteTasks = await incompleteTasksTask;
        upcomingRenewals = await upcomingRenewalsTask;

        if (dailyTasksCompleted == null)
        {
            dailyTasksCompleted = new List<DailyTask>();
        }
        isLoading = false;
        StateHasChanged();
    }
}