@page "/Renewals"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns

@using Mantis.Domain.Policies.Models
@using Mantis.Domain.Policies.Services
@using Mantis.Domain.Renewals.Models
@using Mantis.Domain.Renewals.Services
@using Mantis.Domain.Users.Services

@inject PolicyService PolicyService
@inject RenewalService RenewalService
@inject UserService UserService

@rendermode InteractiveServer

<_toolbar />

<div class="page-content">
    <h1 class="renewalheader">Renewal Sheets</h1>

    <div class="filter-section">
        <SfDropDownList TValue="string" TItem="ApplicationUser" @bind-Value="SelectedAssignedUserId" DataSource="@AssignedUsers" Placeholder="Select Assigned User"></SfDropDownList>
       @*  <SfDropDownList TValue="int" @bind-Value="SelectedMonth" DataSource="Months" Placeholder="Select Month"></SfDropDownList>
        <SfDropDownList TValue="int" @bind-Value="SelectedYear" DataSource="Years" Placeholder="Select Year"></SfDropDownList> *@
        @* <button @onclick="ApplyFilters">Apply Filters</button> *@
    </div>

    <div class="homelist">
        <table class="table" style="font-size:1.25em;">
            <thead>
                <tr>
                    <th><strong>Insured Name</strong></th>
                    <th>Policy Type</th>
                    <th>Expiration Date</th>
                    <th>Carrier</th>
                    <th>CSR</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in FilteredRenewals)
                {
                    <tr>
                        <td><a href="/Renewals/@item.RenewalId">@item.Client?.Name</a></td>
                        <td>@item.Product?.LineNickname</td>
                        <td>@item.RenewalDate.ToShortDateString()</td>
                        <td>@item.Wholesaler?.CarrierName <strong>@item.Carrier?.CarrierName</strong></td>
                        <td>@item.AssignedTo?.FirstName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private string SelectedAssignedUserId { get; set; }
    private int? SelectedMonth { get; set; }
    private int? SelectedYear { get; set; }
    private List<Renewal> Renewals { get; set; } = new List<Renewal>();
    private List<ApplicationUser> AssignedUsers { get; set; } = new List<ApplicationUser>();
    private List<int> Months => Enumerable.Range(1, 12).ToList();
    private List<int> Years => Renewals.Select(p => p.RenewalDate.Year).Distinct().OrderBy(y => y).ToList();
    private List<Renewal> FilteredRenewals => Renewals
        .Where(p => string.IsNullOrEmpty(SelectedAssignedUserId) || p.AssignedToId == SelectedAssignedUserId)
        .Where(p => !SelectedMonth.HasValue || p.RenewalDate.Month == SelectedMonth.Value)
        .Where(p => !SelectedYear.HasValue || p.RenewalDate.Year == SelectedYear.Value)
        .ToList();

    protected override async Task OnInitializedAsync()
    {
        Renewals = await RenewalService.GetAllRenewalsAsync();
        AssignedUsers = await UserService.GetAllUsers();

        BreadcrumbService.UpdateBreadcrumb(new List<BreadcrumbItem>
        {
            new BreadcrumbItem { Text = "Home", Url = "/" },
            new BreadcrumbItem { Text = "Renewals" }
        });
        InvokeAsync(StateHasChanged);
    }
}
