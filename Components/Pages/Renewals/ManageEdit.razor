@page "/Renewals/ManageEdit"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars
@using Mantis.Domain.Renewals.Models
@using Mantis.Domain.Renewals.Services
@using Mantis.Domain.Carriers.Models
@using Mantis.Domain.Shared
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject RenewalService RenewalService
@inject SharedService SharedService
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@rendermode InteractiveServer

<EditForm Model="Renewal" OnValidSubmit="UpdateRenewal">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mf-flex mf-flex-row mf-row-container">
        <div class="mf-item-lg">
            <div class="mb-3">
                <SfDatePicker TValue="DateTime" @bind-Value="Renewal.RenewalDate" Placeholder="Renewal Date" FloatLabelType="FloatLabelType.Always" />
                <ValidationMessage For="() => Renewal.RenewalDate" class="text-danger" />
            </div>
            <div class="mb-3">
                <SfTextBox @bind-Value="Renewal.ExpiringPolicyNumber" Placeholder="Expiring Policy Number" FloatLabelType="FloatLabelType.Always" />
                <ValidationMessage For="() => Renewal.ExpiringPolicyNumber" class="text-danger" />
            </div>
            <div class="mb-3">
                <SfNumericTextBox TValue="decimal?" @bind-Value="Renewal.ExpiringPremium" Placeholder="Expiring Premium" FloatLabelType="FloatLabelType.Always" Format="C2" />
                <ValidationMessage For="() => Renewal.ExpiringPremium" class="text-danger" />
            </div>
            <div class="mb-3">
                <SfTextBox @bind-Value="Renewal.Notes" Placeholder="Notes" FloatLabelType="FloatLabelType.Always" />
                <ValidationMessage For="() => Renewal.Notes" class="text-danger" />
            </div>
        </div>
        <div class="mf-item-lg mf-pad-left">
            <div class="mb-3">
                <SfDropDownList TValue="int" TItem="Product" DataSource="@AllProducts" Placeholder="Product" @bind-Value="Renewal.ProductId" AllowFiltering="true" PopupHeight="230px" ShowClearButton="true" FloatLabelType="FloatLabelType.Always">
                    <DropDownListFieldSettings Text="LineName" Value="ProductId" />
                </SfDropDownList>
                <ValidationMessage For="() => Renewal.ProductId" class="text-danger" />
            </div>
            <div class="mb-3">
                <SfDropDownList TValue="int?" TItem="Carrier" DataSource="@AllCarriers" Placeholder="Carrier" @bind-Value="Renewal.CarrierId" AllowFiltering="true" PopupHeight="230px" ShowClearButton="true" FloatLabelType="FloatLabelType.Always">
                    <DropDownListFieldSettings Text="CarrierName" Value="CarrierId" />
                </SfDropDownList>
                <ValidationMessage For="() => Renewal.CarrierId" class="text-danger" />
            </div>
            <div class="mb-3">
                <SfDropDownList TValue="int?" TItem="Carrier" DataSource="@AllWholesalers" Placeholder="Wholesaler" @bind-Value="Renewal.WholesalerId" AllowFiltering="true" PopupHeight="230px" ShowClearButton="true" FloatLabelType="FloatLabelType.Always">
                    <DropDownListFieldSettings Text="CarrierName" Value="CarrierId" />
                </SfDropDownList>
                <ValidationMessage For="() => Renewal.WholesalerId" class="text-danger" />
            </div>
            <div class="mb-3">
                <SfDropDownList TValue="string" TItem="ApplicationUser" DataSource="@AllUsers" Placeholder="Assigned To" @bind-Value="Renewal.AssignedToId" AllowFiltering="true" PopupHeight="230px" ShowClearButton="true" FloatLabelType="FloatLabelType.Always">
                    <DropDownListFieldSettings Text="FirstName" Value="Id" />
                </SfDropDownList>
                <ValidationMessage For="() => Renewal.AssignedToId" class="text-danger" />
            </div>
        </div>
    </div>
    <br />
    <FluentButton Type="ButtonType.Button" Appearance="Appearance.Outline" OnClick="GoBack">Cancel</FluentButton>
    <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent">Save Renewal</FluentButton>
</EditForm>

@code {
    [Parameter]
    public Renewal Renewal { get; set; } // Passing the renewal object from parent

    [Parameter]
    public List<Carrier> AllCarriers { get; set; } // Passing the list of carriers from parent

    [Parameter]
    public List<Carrier> AllWholesalers { get; set; } // Passing the list of wholesalers from parent

    [Parameter]
    public List<ApplicationUser> AllUsers { get; set; } // Passing the list of users from parent

    [Parameter]
    public EventCallback<Renewal> OnRenewalUpdated { get; set; }

    public List<Product> AllProducts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AllProducts = await SharedService.GetAllProductsAsync();
    }

    private async Task UpdateRenewal()
    {
        using (var context = DbContextFactory.CreateDbContext())
        {
            context.Entry(Renewal).State = EntityState.Modified;
            await context.SaveChangesAsync();
        }

        
        
        await OnRenewalUpdated.InvokeAsync(Renewal);
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
        //Console.WriteLine("Updating renessssssssssssssssssssssssssssssssssssssssssswal");
        //Console.WriteLine("going back updating renewal--------------------------------------");
        //var thisthat = Renewal;
        //StateHasChanged();
        //NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    public void GoBack()
    {
        NavigationManager.NavigateTo("/renewals");
    }
}
