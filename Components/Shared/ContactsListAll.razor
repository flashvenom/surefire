@namespace Mantis.Components.Shared
@using Microsoft.FluentUI.AspNetCore.Components
@using Syncfusion.Blazor.Buttons
@using Microsoft.AspNetCore.Components.Routing
@using Mantis.Domain.Contacts.Models
@using Mantis.Components.Shared
@using Mantis.Domain.Shared.Helpers
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div>
    @if (Contacts == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!Contacts.Any())
    {
        <p>No contacts found for this parent.</p>
    }
    else
    {
        foreach (var item in Contacts)
        {
            string fullName = item.FirstName + " " + item.LastName;
            string nameInitials = $"{item.FirstName[0]}{item.LastName[0]}";

            if (!string.IsNullOrEmpty(item.HeadshotFilename))
            {
                headshotImage = "/uploads/client/" + item.HeadshotFilename;
            }

            <FluentStack Class="m-contact">
                <div>
                    <FluentPersona Initials="@nameInitials" ImageSize="55px" Class="txt-persona" Image="@headshotImage" />
                </div>

                <div>
                    <span class="m-name">
                        @item.FirstName @item.LastName
                    </span>
                    @if (item.Title != null)
                    {
                        <span class="m-title">, @item.Title</span>
                    }
                    <br />

                    @if (item.Email != null)
                    {
                        <div class="m-email">@item.Email</div>
                    }
                    @if (item.Phone != null)
                    {
                        <span class="m-phone m-padafter">
                            @DateHelper.FormatPhoneNumber(item.Phone)
                            <span class="m-phonetype">ph.</span>
                        </span>
                    }
                    @if (item.Mobile != null)
                    {
                        <span class="m-phone m-padafter">
                            @DateHelper.FormatPhoneNumber(item.Mobile)
                            <span class="m-phonetype">cell</span>
                        </span>
                    }
                </div>
                <div style="text-align:center;">
                    <UI_ToggleBookmark IsStarred="@item.IsStarred" OnStarChanged="@((bool isStarred) => ToggleStar(item.ContactId, isStarred))" />
                    <a href="/Contacts/Edit/@(item.ContactId)">
                        <FluentIcon Value="@(new Icons.Regular.Size24.Pen())" />
                    </a>
                </div>
                @if(isPrimary == true)
                {
                <div>
                    <FluentIcon Value="@(new Icons.Filled.Size32.Star())" Color="Color.Warning" />
                </div>
                }
            </FluentStack>
        }
    }
</div>

@code {
    [Parameter]
    public ICollection<Contact> Contacts { get; set; }  // List of contacts passed from the parent component

    [Parameter]
    public string ParentType { get; set; }

    [Parameter]
    public int ParentId { get; set; }

    [Parameter]
    public bool isPrimary { get; set; }

    public string headshotImage { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        InvokeAsync(StateHasChanged);
    }
    private void ToggleStar(int contactId, bool isStarred)
    {
        
    }
    private void Dispose()
    {

    }

}