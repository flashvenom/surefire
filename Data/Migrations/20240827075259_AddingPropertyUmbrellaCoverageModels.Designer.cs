// <auto-generated />
using System;
using Mantis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mantis.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240827075259_AddingPropertyUmbrellaCoverageModels")]
    partial class AddingPropertyUmbrellaCoverageModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mantis.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastLookupClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastLookupPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Mantis.Domain.Carriers.Models.Carrier", b =>
                {
                    b.Property<int>("CarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarrierId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AppetiteJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierNickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IssuingCarrier")
                        .HasColumnType("bit");

                    b.Property<string>("LookupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LossRunsEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewSubmissionEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuotelinesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuotingWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicingEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicingWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Wholesaler")
                        .HasColumnType("bit");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarrierId");

                    b.HasIndex("AddressId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("Mantis.Domain.Clients.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("CSRId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LookupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrimaryContactId")
                        .HasColumnType("int");

                    b.Property<string>("ProducerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eClientId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.HasIndex("AddressId");

                    b.HasIndex("CSRId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PrimaryContactId");

                    b.HasIndex("ProducerId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Mantis.Domain.Contacts.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool>("Billing")
                        .HasColumnType("bit");

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Owner")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Representative")
                        .HasColumnType("bit");

                    b.Property<bool>("Service")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Underwriter")
                        .HasColumnType("bit");

                    b.HasKey("ContactId");

                    b.HasIndex("AddressId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ClientId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Mantis.Domain.Forms.Models.Certificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<bool?>("AttachAI")
                        .HasColumnType("bit");

                    b.Property<bool?>("AttachPNC")
                        .HasColumnType("bit");

                    b.Property<bool?>("AttachWOS")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JSONData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JSONDataTemp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CertificateId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.AutoCoverage", b =>
                {
                    b.Property<int>("AutoCoverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutoCoverageId"));

                    b.Property<bool?>("AdditionalAttachments")
                        .HasColumnType("bit");

                    b.Property<int?>("AdditionalAttachmentsAttachmentAttachmentId")
                        .HasColumnType("int");

                    b.Property<int?>("AdditionalCoverageLimit")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalCoverageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AdditionalInsured")
                        .HasColumnType("bit");

                    b.Property<int?>("AdditionalInsuredAttachmentAttachmentId")
                        .HasColumnType("int");

                    b.Property<int?>("BodilyInjuryPerAccident")
                        .HasColumnType("int");

                    b.Property<int?>("BodilyInjuryPerPerson")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CombinedLimit")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ForAny")
                        .HasColumnType("bit");

                    b.Property<bool?>("ForHired")
                        .HasColumnType("bit");

                    b.Property<bool?>("ForNonOwned")
                        .HasColumnType("bit");

                    b.Property<bool?>("ForOwned")
                        .HasColumnType("bit");

                    b.Property<bool?>("ForScheduled")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyDamage")
                        .HasColumnType("int");

                    b.Property<bool?>("WaiverOfSub")
                        .HasColumnType("bit");

                    b.Property<int?>("WaiverOfSubAttachmentAttachmentId")
                        .HasColumnType("int");

                    b.HasKey("AutoCoverageId");

                    b.HasIndex("AdditionalAttachmentsAttachmentAttachmentId");

                    b.HasIndex("AdditionalInsuredAttachmentAttachmentId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PolicyId")
                        .IsUnique()
                        .HasFilter("[PolicyId] IS NOT NULL");

                    b.HasIndex("WaiverOfSubAttachmentAttachmentId");

                    b.ToTable("AutoCoverages");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClaimNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfLoss")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.HasIndex("PolicyId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.GeneralLiabilityCoverage", b =>
                {
                    b.Property<int>("GeneralLiabilityCoverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneralLiabilityCoverageId"));

                    b.Property<bool?>("AdditionalAttachments")
                        .HasColumnType("bit");

                    b.Property<int?>("AdditionalAttachmentsAttachmentAttachmentId")
                        .HasColumnType("int");

                    b.Property<int?>("AdditionalCoverageLimit")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalCoverageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AdditionalInsured")
                        .HasColumnType("bit");

                    b.Property<int?>("AdditionalInsuredAttachmentAttachmentId")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalInsuredFormNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AggregateAppliesPer")
                        .HasColumnType("int");

                    b.Property<bool?>("ClaimsMade")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DamageToPremises")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EachOccurrence")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralAggregate")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalExpenses")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Occurence")
                        .HasColumnType("bit");

                    b.Property<int?>("PersonalInjury")
                        .HasColumnType("int");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Premium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PrimaryWording")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductsAggregate")
                        .HasColumnType("int");

                    b.Property<bool?>("WaiverOfSub")
                        .HasColumnType("bit");

                    b.Property<int?>("WaiverOfSubAttachmentAttachmentId")
                        .HasColumnType("int");

                    b.HasKey("GeneralLiabilityCoverageId");

                    b.HasIndex("AdditionalAttachmentsAttachmentAttachmentId");

                    b.HasIndex("AdditionalInsuredAttachmentAttachmentId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PolicyId")
                        .IsUnique()
                        .HasFilter("[PolicyId] IS NOT NULL");

                    b.HasIndex("WaiverOfSubAttachmentAttachmentId");

                    b.ToTable("GeneralLiabilityCoverages");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Loss", b =>
                {
                    b.Property<int>("LossId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LossId"));

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AmountReserved")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateClaimSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOccurred")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Open")
                        .HasColumnType("bit");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Subgrogated")
                        .HasColumnType("bit");

                    b.Property<string>("UserModifiedId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LossId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("UserModifiedId");

                    b.ToTable("Losses");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("CSRId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Premium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProducerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WholesalerId")
                        .HasColumnType("int");

                    b.Property<string>("ePolicyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ePolicyLineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CSRId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProducerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.PropertyCoverage", b =>
                {
                    b.Property<int>("PropertyCoverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyCoverageId"));

                    b.Property<int?>("BusinessPersonalProperty")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Equipment")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("PropertyCoverageId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PolicyId")
                        .IsUnique()
                        .HasFilter("[PolicyId] IS NOT NULL");

                    b.ToTable("PropertyCoverage");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.RatingBasis", b =>
                {
                    b.Property<int>("RatingBasisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingBasisId"));

                    b.Property<decimal?>("BaseRate")
                        .HasColumnType("decimal(7,4)");

                    b.Property<string>("Basis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exposure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetRate")
                        .HasColumnType("decimal(7,4)");

                    b.Property<decimal?>("Payroll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Premium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserModifiedId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RatingBasisId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserModifiedId");

                    b.ToTable("RatingBases");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.UmbrellaCoverage", b =>
                {
                    b.Property<int>("UmbrellaCoverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UmbrellaCoverageId"));

                    b.Property<bool?>("ClaimsMade")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeductibleRetentionAmount")
                        .HasColumnType("int");

                    b.Property<int?>("EachOccurrence")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralAggregate")
                        .HasColumnType("int");

                    b.Property<bool?>("HasDeductible")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRetention")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExcess")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUmbrella")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Occurrence")
                        .HasColumnType("bit");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("UmbrellaCoverageId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PolicyId")
                        .IsUnique()
                        .HasFilter("[PolicyId] IS NOT NULL");

                    b.ToTable("UmbrellaCoverage");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.WorkCompCoverage", b =>
                {
                    b.Property<int>("WorkCompCoverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkCompCoverageId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiseaseEachEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("DiseasePolicyLimit")
                        .HasColumnType("int");

                    b.Property<int?>("EachAccident")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("OwnersOfficersExcluded")
                        .HasColumnType("bit");

                    b.Property<bool?>("PerOther")
                        .HasColumnType("bit");

                    b.Property<bool?>("PerStatute")
                        .HasColumnType("bit");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<bool?>("WaiverOfSub")
                        .HasColumnType("bit");

                    b.Property<int?>("WaiverOfSubAttachmentAttachmentId")
                        .HasColumnType("int");

                    b.HasKey("WorkCompCoverageId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PolicyId")
                        .IsUnique()
                        .HasFilter("[PolicyId] IS NOT NULL");

                    b.HasIndex("WaiverOfSubAttachmentAttachmentId");

                    b.ToTable("WorkCompCoverages");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.Renewal", b =>
                {
                    b.Property<int>("RenewalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RenewalId"));

                    b.Property<string>("AssignedToId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpiringPolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExpiringPremium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WholesalerId")
                        .HasColumnType("int");

                    b.HasKey("RenewalId");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ClientId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("Renewals");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.Submission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Premium")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("RenewalId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusInt")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmissionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WholesalerId")
                        .HasColumnType("int");

                    b.HasKey("SubmissionId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RenewalId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.TaskMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DaysBeforeExpiration")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Important")
                        .HasColumnType("bit");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ParentTaskId")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("TaskMasters");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.TrackTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedToId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GoalDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<bool>("Highlighted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("RenewalId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("RenewalId");

                    b.ToTable("TrackTasks");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Attachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttachmentId"));

                    b.Property<int?>("ClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int?>("RenewalId")
                        .HasColumnType("int");

                    b.Property<string>("StoreType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttachmentId");

                    b.HasIndex("ClaimId");

                    b.HasIndex("ClientId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("RenewalId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.DailyTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedToId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Highlighted")
                        .HasColumnType("bit");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.ToTable("DailyTasks");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimaryDriver")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LicenseExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("DriverId");

                    b.HasIndex("PolicyId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuildingTotalSquareFootage")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumFullTimeEmployees")
                        .HasColumnType("int");

                    b.Property<int?>("NumPartTimeEmployees")
                        .HasColumnType("int");

                    b.Property<int?>("NumStories")
                        .HasColumnType("int");

                    b.Property<int?>("OccupiedSquareFootage")
                        .HasColumnType("int");

                    b.Property<bool?>("Owner")
                        .HasColumnType("bit");

                    b.Property<string>("SquareFootage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Tenant")
                        .HasColumnType("bit");

                    b.Property<string>("YearBuilt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineNickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("CountryOfRegistration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.HasIndex("PolicyId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Mantis.Domain.Carriers.Models.Carrier", b =>
                {
                    b.HasOne("Mantis.Domain.Shared.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Address");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Mantis.Domain.Clients.Models.Client", b =>
                {
                    b.HasOne("Mantis.Domain.Shared.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mantis.Data.ApplicationUser", "CSR")
                        .WithMany()
                        .HasForeignKey("CSRId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mantis.Domain.Contacts.Models.Contact", "PrimaryContact")
                        .WithMany()
                        .HasForeignKey("PrimaryContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mantis.Data.ApplicationUser", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Address");

                    b.Navigation("CSR");

                    b.Navigation("CreatedBy");

                    b.Navigation("PrimaryContact");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Mantis.Domain.Contacts.Models.Contact", b =>
                {
                    b.HasOne("Mantis.Domain.Shared.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Mantis.Domain.Carriers.Models.Carrier", "Carrier")
                        .WithMany("Contacts")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany("Contacts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Address");

                    b.Navigation("Carrier");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Mantis.Domain.Forms.Models.Certificate", b =>
                {
                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany("Certificates")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.AutoCoverage", b =>
                {
                    b.HasOne("Mantis.Domain.Shared.Attachment", "AdditionalAttachmentsAttachment")
                        .WithMany()
                        .HasForeignKey("AdditionalAttachmentsAttachmentAttachmentId");

                    b.HasOne("Mantis.Domain.Shared.Attachment", "AdditionalInsuredAttachment")
                        .WithMany()
                        .HasForeignKey("AdditionalInsuredAttachmentAttachmentId");

                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithOne("AutoCoverage")
                        .HasForeignKey("Mantis.Domain.Policies.Models.AutoCoverage", "PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Shared.Attachment", "WaiverOfSubAttachment")
                        .WithMany()
                        .HasForeignKey("WaiverOfSubAttachmentAttachmentId");

                    b.Navigation("AdditionalAttachmentsAttachment");

                    b.Navigation("AdditionalInsuredAttachment");

                    b.Navigation("Client");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Policy");

                    b.Navigation("WaiverOfSubAttachment");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Claim", b =>
                {
                    b.HasOne("Mantis.Domain.Policies.Models.Policy", null)
                        .WithMany("Claims")
                        .HasForeignKey("PolicyId");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.GeneralLiabilityCoverage", b =>
                {
                    b.HasOne("Mantis.Domain.Shared.Attachment", "AdditionalAttachmentsAttachment")
                        .WithMany()
                        .HasForeignKey("AdditionalAttachmentsAttachmentAttachmentId");

                    b.HasOne("Mantis.Domain.Shared.Attachment", "AdditionalInsuredAttachment")
                        .WithMany()
                        .HasForeignKey("AdditionalInsuredAttachmentAttachmentId");

                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithOne("GeneralLiabilityCoverage")
                        .HasForeignKey("Mantis.Domain.Policies.Models.GeneralLiabilityCoverage", "PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Shared.Attachment", "WaiverOfSubAttachment")
                        .WithMany()
                        .HasForeignKey("WaiverOfSubAttachmentAttachmentId");

                    b.Navigation("AdditionalAttachmentsAttachment");

                    b.Navigation("AdditionalInsuredAttachment");

                    b.Navigation("Client");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Policy");

                    b.Navigation("WaiverOfSubAttachment");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Loss", b =>
                {
                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithMany("Losses")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "UserModified")
                        .WithMany()
                        .HasForeignKey("UserModifiedId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Policy");

                    b.Navigation("UserModified");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Policy", b =>
                {
                    b.HasOne("Mantis.Domain.Policies.Models.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Mantis.Data.ApplicationUser", "CSR")
                        .WithMany()
                        .HasForeignKey("CSRId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Carriers.Models.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany("Policies")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Shared.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Carriers.Models.Carrier", "Wholesaler")
                        .WithMany()
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Application");

                    b.Navigation("CSR");

                    b.Navigation("Carrier");

                    b.Navigation("Client");

                    b.Navigation("CreatedBy");

                    b.Navigation("Producer");

                    b.Navigation("Product");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.PropertyCoverage", b =>
                {
                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithOne("PropertyCoverage")
                        .HasForeignKey("Mantis.Domain.Policies.Models.PropertyCoverage", "PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.RatingBasis", b =>
                {
                    b.HasOne("Mantis.Domain.Shared.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithMany("RatingBases")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Shared.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "UserModified")
                        .WithMany()
                        .HasForeignKey("UserModifiedId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Location");

                    b.Navigation("Policy");

                    b.Navigation("Product");

                    b.Navigation("UserModified");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.UmbrellaCoverage", b =>
                {
                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithOne("UmbrellaCoverage")
                        .HasForeignKey("Mantis.Domain.Policies.Models.UmbrellaCoverage", "PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.WorkCompCoverage", b =>
                {
                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithOne("WorkCompCoverage")
                        .HasForeignKey("Mantis.Domain.Policies.Models.WorkCompCoverage", "PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Shared.Attachment", "WaiverOfSubAttachment")
                        .WithMany()
                        .HasForeignKey("WaiverOfSubAttachmentAttachmentId");

                    b.Navigation("Client");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Policy");

                    b.Navigation("WaiverOfSubAttachment");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.Renewal", b =>
                {
                    b.HasOne("Mantis.Data.ApplicationUser", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mantis.Domain.Carriers.Models.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Clients.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", "Policy")
                        .WithMany("Renewals")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Shared.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mantis.Domain.Carriers.Models.Carrier", "Wholesaler")
                        .WithMany()
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AssignedTo");

                    b.Navigation("Carrier");

                    b.Navigation("Client");

                    b.Navigation("Policy");

                    b.Navigation("Product");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.Submission", b =>
                {
                    b.HasOne("Mantis.Domain.Carriers.Models.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Shared.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mantis.Domain.Renewals.Models.Renewal", "Renewal")
                        .WithMany("Submissions")
                        .HasForeignKey("RenewalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Carriers.Models.Carrier", "Wholesaler")
                        .WithMany()
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Carrier");

                    b.Navigation("Product");

                    b.Navigation("Renewal");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.TaskMaster", b =>
                {
                    b.HasOne("Mantis.Domain.Renewals.Models.TaskMaster", null)
                        .WithMany()
                        .HasForeignKey("ParentTaskId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.TrackTask", b =>
                {
                    b.HasOne("Mantis.Data.ApplicationUser", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mantis.Domain.Renewals.Models.Renewal", "Renewal")
                        .WithMany("TrackTasks")
                        .HasForeignKey("RenewalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("Renewal");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Attachment", b =>
                {
                    b.HasOne("Mantis.Domain.Policies.Models.Claim", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ClaimId");

                    b.HasOne("Mantis.Domain.Clients.Models.Client", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ClientId");

                    b.HasOne("Mantis.Domain.Policies.Models.Policy", null)
                        .WithMany("Attachments")
                        .HasForeignKey("PolicyId");

                    b.HasOne("Mantis.Domain.Renewals.Models.Renewal", null)
                        .WithMany("Attachments")
                        .HasForeignKey("RenewalId");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.DailyTask", b =>
                {
                    b.HasOne("Mantis.Data.ApplicationUser", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssignedTo");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Driver", b =>
                {
                    b.HasOne("Mantis.Domain.Policies.Models.Policy", null)
                        .WithMany("Drivers")
                        .HasForeignKey("PolicyId");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Location", b =>
                {
                    b.HasOne("Mantis.Domain.Shared.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mantis.Domain.Clients.Models.Client", null)
                        .WithMany("Locations")
                        .HasForeignKey("ClientId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Mantis.Domain.Shared.Vehicle", b =>
                {
                    b.HasOne("Mantis.Domain.Policies.Models.Policy", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("PolicyId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Mantis.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Mantis.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mantis.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Mantis.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mantis.Domain.Carriers.Models.Carrier", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Mantis.Domain.Clients.Models.Client", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Certificates");

                    b.Navigation("Contacts");

                    b.Navigation("Locations");

                    b.Navigation("Policies");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Claim", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Mantis.Domain.Policies.Models.Policy", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("AutoCoverage");

                    b.Navigation("Claims");

                    b.Navigation("Drivers");

                    b.Navigation("GeneralLiabilityCoverage");

                    b.Navigation("Losses");

                    b.Navigation("PropertyCoverage");

                    b.Navigation("RatingBases");

                    b.Navigation("Renewals");

                    b.Navigation("UmbrellaCoverage");

                    b.Navigation("Vehicles");

                    b.Navigation("WorkCompCoverage");
                });

            modelBuilder.Entity("Mantis.Domain.Renewals.Models.Renewal", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Submissions");

                    b.Navigation("TrackTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
